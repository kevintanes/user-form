import { db } from "@/firebase";
import { Box, Button, Container, Stack, TextField } from "@mui/material";
import { collection, getDocs, query, where } from "firebase/firestore";
import Head from "next/head";
import { useRouter } from "next/router";
import { useState } from "react";
import { useUpdateData } from "../../hooks/useData";
import { User } from "../../types";

interface GetServerSideProps {
  user: User[];
}

export default function EditUser(props: GetServerSideProps) {
  const router = useRouter();

  const { user } = props;
  const { updateUser } = useUpdateData();

  const printUser = () => {
    return user.map((val: User) => {
      return (
        <>
          <Stack key={val.id} sx={{ mt: 2 }}>
            <TextField
              defaultValue={val.username}
              onChange={(e) => setUsername(e.target.value)}
              margin="dense"
              label="Username"
              type="text"
              fullWidth
              variant="standard"
              required
            />
            <TextField
              defaultValue={val.email}
              onChange={(e) => setEmail(e.target.value)}
              margin="dense"
              label="Email Address"
              type="email"
              fullWidth
              variant="standard"
              required
            />
            <TextField
              defaultValue={val.phone}
              onChange={(e) => setPhone(e.target.value)}
              margin="dense"
              label="Phone"
              type="text"
              fullWidth
              variant="standard"
              required
            />
            <TextField
              defaultValue={val.address}
              onChange={(e) => setAddress(e.target.value)}
              multiline
              rows={3}
              margin="dense"
              label="Address"
              type="text"
              fullWidth
              variant="outlined"
              sx={{ mt: 2 }}
              required
            />
          </Stack>
        </>
      );
    });
  };

  const btnSave = () => {
    updateUser(user[0].id, username, email, phone, address);
    router.push("/")
  };
  const [username, setUsername] = useState(user[0].username);
  const [email, setEmail] = useState(user[0].email);
  const [phone, setPhone] = useState(user[0].phone);
  const [address, setAddress] = useState(user[0].address);

  return (
    <>
      <Head>
        <title>Edit Page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container
        sx={{
          py: 2,
          bgcolor: "whitesmoke",
        }}
      >
        <Button onClick={() => router.push("/")} variant="text" color="warning">
          Back To Home
        </Button>
        {printUser()}
        <Box display="flex" justifyContent="flex-end">
          <Button type="submit" sx={{ mt: 2 }} variant="contained" onClick={() => btnSave()}>
            Save
          </Button>
        </Box>
      </Container >
    </>
  );
}

export async function getServerSideProps(context: any) {
  try {
    let user: User[] = [];
    const data = query(collection(db, "user"), where("username", "==", context.query.id));
    let getData = await getDocs(data);
    getData.docs.map((val) => {
      const userData = val.data();
      user.push({
        id: val.id,
        username: userData.username,
        email: userData.email,
        phone: userData.phone,
        address: userData.address,
      });
    });

    return {
      props: {
        user,
      },
    };
  } catch (error) {
    console.log(error);
  }
}
